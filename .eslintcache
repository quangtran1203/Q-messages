[{"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\index.js":"1","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\reportWebVitals.js":"2","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\App.js":"3","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\Sidebar.js":"4","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\MainChat.js":"5","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\SideChat.js":"6","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\firebase.js":"7","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\Login.js":"8","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\StateProvider.js":"9","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\reducer.js":"10"},{"size":689,"mtime":1611379579162,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":797,"mtime":1611379832742,"results":"14","hashOfConfig":"12"},{"size":2460,"mtime":1611386550984,"results":"15","hashOfConfig":"12"},{"size":3653,"mtime":1611382256326,"results":"16","hashOfConfig":"12"},{"size":1694,"mtime":1611387108799,"results":"17","hashOfConfig":"12"},{"size":700,"mtime":1611295529114,"results":"18","hashOfConfig":"12"},{"size":1150,"mtime":1611386625163,"results":"19","hashOfConfig":"12"},{"size":543,"mtime":1611379253844,"results":"20","hashOfConfig":"12"},{"size":401,"mtime":1611379529128,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cnvahf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\index.js",[],["47","48"],"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\reportWebVitals.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\App.js",["49","50"],"import React, { useState } from \"react\";\nimport './App.css';\nimport MainChat from \"./MainChat\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? <Login /> : (\n        <div className=\"app_body\">\n        <Router>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <MainChat />\n            </Route>\n\n            <Route path=\"/\">\n              <MainChat/>\n            </Route>\n            \n          </Switch>\n        </Router>\n      </div>  \n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\Sidebar.js",["51"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SideChat from './SideChat';\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection(\"rooms\").onSnapshot(snapshot =>\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        );\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input value={search} onChange={e => setSearch(e.target.value)} placeholder=\"Search for rooms\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_chats\">\r\n                <SideChat addNew />\r\n                \r\n                {rooms.filter(room => {\r\n                    return room.data.name.toLowerCase().includes(search.toLowerCase());\r\n                })\r\n                    .map(room => (<SideChat key={room.id} id={room.id} name={room.data.name} />))}\r\n                \r\n                \r\n                {/*rooms.map(room => (\r\n                    <SideChat key={room.id} id={room.id} name={room.data.name}/>\r\n                ))*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\MainChat.js",["52"],"import React, { useEffect, useState } from 'react';\r\nimport \"./MainChat.css\";\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction MainChat() {\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const { roomId } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot(snap => (\r\n                setRoom(snap.data().name)\r\n            ));\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\")\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot(snap => (\r\n                    setMessages(snap.docs.map(doc => doc.data()))\r\n            ))\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*2200))\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        //console.log(\"input received\");\r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\")\r\n            .add({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"mainchat\">\r\n            <div className=\"mainchat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`}/>\r\n                <div className=\"mainchat_headerInfo\">\r\n                    <h3>{room}</h3>\r\n                    <p>\r\n                       Last active {new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"mainchat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mainchat_body\">\r\n                {messages.map(message => (\r\n                    <p className={`mainchat_message ${message.name === user.displayName && \"mainchat_receiver\"}`}>\r\n                        <span className=\"mainchat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"mainchat_timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n                \r\n            </div>\r\n\r\n            <div className=\"mainchat_footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Send a message....\" type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\"><SendIcon/></button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainChat\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\SideChat.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\firebase.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\Login.js",["53"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then(result => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n            alert(\"Signed in successfully!\");\r\n        })\r\n            .catch(err => alert(err.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <h1 className=\"login_title\">Q-messages</h1>\r\n                <div className=\"login_text\">\r\n                    <h2>Sign In to Q-messages</h2>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n\r\n            <p>&#169; 2021 - Quang Tran</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\StateProvider.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\Qmessages-v2\\qmessagesv2\\src\\reducer.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":11,"column":20,"nodeType":"60","messageId":"61","endLine":11,"endColumn":28},{"ruleId":"58","severity":1,"message":"62","line":15,"column":22,"nodeType":"60","messageId":"61","endLine":15,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":15,"column":22,"nodeType":"60","messageId":"61","endLine":15,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]